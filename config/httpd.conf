# Apache httpd v2.4 minimal configuration
ServerRoot "/usr/local/apache2"
ServerName apache2

# Port to Listen on
#Listen *:443
Listen *:80

# modules needed
LoadModule mpm_event_module modules/mod_mpm_event.so
LoadModule log_config_module modules/mod_log_config.so
LoadModule mime_module modules/mod_mime.so
LoadModule dir_module modules/mod_dir.so
LoadModule authz_core_module modules/mod_authz_core.so
LoadModule unixd_module modules/mod_unixd.so
LoadModule headers_module modules/mod_headers.so
LoadModule rewrite_module modules/mod_rewrite.so
LoadModule proxy_module modules/mod_proxy.so
LoadModule proxy_http_module modules/mod_proxy_http.so
LoadModule ssl_module modules/mod_ssl.so
LoadModule info_module modules/mod_info.so
LoadModule proxy_fcgi_module modules/mod_proxy_fcgi.so
#LoadModule php7_module modules/mod_php.so


#PidFile logs/httpd.pid

<IfModule unixd_module>
#
# If you wish httpd to run as a different user or group, you must run
# httpd as root initially and it will switch.  
#
# User/Group: The name (or #number) of the user/group to run httpd as.
# It is usually good practice to create a dedicated user and group for
# running httpd, as with most system services.
#
User daemon
Group daemon

</IfModule>

<IfModule mime_module>
    #
    # TypesConfig points to the file containing the list of mappings from
    # filename extension to MIME-type.
    #
    TypesConfig conf/mime.types

    #
    # AddType allows you to add to or override the MIME configuration
    # file specified in TypesConfig for specific file types.
    #
    #AddType application/x-gzip .tgz
    #
    # AddEncoding allows you to have certain browsers uncompress
    # information on the fly. Note: Not all browsers support this.
    #
    #AddEncoding x-compress .Z
    #AddEncoding x-gzip .gz .tgz
    #
    # If the AddEncoding directives above are commented-out, then you
    # probably should define those extensions to indicate media types:
    #
    AddType application/x-compress .Z
    AddType application/x-gzip .gz .tgz

    #
    # AddHandler allows you to map certain file extensions to "handlers":
    # actions unrelated to filetype. These can be either built into the server
    # or added with the Action directive (see below)
    #
    # To use CGI scripts outside of ScriptAliased directories:
    # (You will also need to add "ExecCGI" to the "Options" directive.)
    #
    #AddHandler cgi-script .cgi

    # For type maps (negotiated resources):
    #AddHandler type-map var

    #
    # Filters allow you to process content before it is sent to the client.
    #
    # To parse .shtml files for server-side includes (SSI):
    # (You will also need to add "Includes" to the "Options" directive.)
    #
    #AddType text/html .shtml
    #AddOutputFilter INCLUDES .shtml
</IfModule>

# Errors go to their own log
#ErrorLog logs/error_log

# Access log
LogFormat "%h %l %u %t \"%r\" %>s %b" common
#CustomLog logs/access_log common
ErrorLog /dev/stderr
CustomLog /dev/stdout common

# Never change this block
<Directory />
  AllowOverride None
  Require all denied
</Directory>




<Location /server-info>
   SetHandler server-info
</Location>


# Default file to serve
#DirectoryIndex index.html
<VirtualHost *:80>
   # ProxyPassMatch "^/(.*\.php)$" "fcgi://php-fpm:9000/$1"

    <FilesMatch \.php$>
      SetHandler "proxy:fcgi://php-fpm1:9000"
    </FilesMatch>
    <filesMatch ".(ico|pdf|flv|jpg|jpeg|png|gif|js|css|swf|html)$">
        Header set Cache-Control "max-age=120, public"
    </filesMatch>
    # Other directives here ...

    # This is the "main" server 
    # In a basic setup httpd can only serve files from its document root
    DocumentRoot "/var/www"
    DirectoryIndex index.php index.html
    ServerName apache2


    # Allow documents to be served from the DocumentRoot
    <Directory "/var/www">
      DirectoryIndex index.php index.html
      Options Indexes FollowSymLinks
      AllowOverride All
      Require all granted
      <IfModule mod_rewrite.c>
        RewriteEngine On
        RewriteBase /
        RewriteRule ^index\.php$ - [L]
        RewriteCond %{REQUEST_FILENAME} !-f
        RewriteCond %{REQUEST_FILENAME} !-d
        RewriteRule . /index.php [L]
      </IfModule>
    </Directory>
</VirtualHost>

#Include /etc/apache2/acme-site-ssl.conf
#Include /etc/apache2/acme-cms-ssl.conf
